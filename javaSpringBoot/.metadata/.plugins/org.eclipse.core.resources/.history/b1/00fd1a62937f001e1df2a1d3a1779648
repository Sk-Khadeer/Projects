package com.testing;

import javax.tools.JavaCompiler;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.Arrays;

import javax.tools.JavaCompiler;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;

import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class TestingApplication {

	public static void main(String[] args) {
		
		 String className = "GeneratedEntity";
	        String classContent = generateClassContent(className);

	        // Save the content to a .java file
	        String fileName = className + ".java";
	        Files.write(Path.of(fileName), Arrays.asList(classContent), StandardCharsets.UTF_8, StandardOpenOption.CREATE);

	        // Compile the generated class
	        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
	        StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null);
	        Iterable<? extends JavaFileObject> compilationUnits = fileManager.getJavaFileObjects(fileName);
	        compiler.getTask(null, fileManager, null, null, null, compilationUnits).call();
	        fileManager.close();

	        System.out.println("Generated class compiled successfully.");
	    }

	    private static String generateClassContent(String className) {
	        return """
	            public class %s {
	                private String exampleField;

	                public %s(String exampleField) {
	                    this.exampleField = exampleField;
	                }

	                public void printExample() {
	                    System.out.println(exampleField);
	                }
	            }
	            """.formatted(className, className);
	    }
	
	}
//		SpringApplication.run(TestingApplication.class, args);
//	}
//	@Bean
//    public CommandLineRunner commandLineRunner(DataSource dataSource) {
//        return args -> {
//            // Accessing the DataSource
//            System.out.println("Datasource URL: " + dataSource.getConnection().getMetaData().getURL());
//
//            // Generating entity class based on the "userinfo" table
//            generateEntityClass(dataSource, "userinfo");
//        };
//    }
//
//    private void generateEntityClass(DataSource dataSource, String tableName) throws SQLException {
//        JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
//        DatabaseMetaData metaData = jdbcTemplate.getDataSource().getConnection().getMetaData();
//        ResultSet resultSet = metaData.getColumns(null, null, tableName, null);
//
//        // Assuming you are printing the information, but you can generate the entity class here
//        System.out.println("Generating entity class for table: " + tableName);
//
//        // Iterate over the result set and print column information
//        while (resultSet.next()) {
//            String columnName = resultSet.getString("COLUMN_NAME");
//            String columnType = resultSet.getString("TYPE_NAME");
//
//            System.out.println("Column Name: " + columnName + ", Column Type: " + columnType);
//        }
//    }


